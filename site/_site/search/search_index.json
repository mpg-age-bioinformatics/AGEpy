{
    "docs": [
        {
            "location": "/", 
            "text": "AGEpy \n \n \n\n\nThis python package contains Bioinformatics tools developed at the\nBioinformatics Core Facility of the Max Planck Institute for Biology of Ageing.\n\n\n\n\nMax Planck Institute for Biology of Ageing\n\nJoseph-Stelzmann-Str. 9b\n\nD-50931 Cologne\n\nGermany\n\n\n\n\nInstallation\n\n\npip\n\n\npip install https://github.com/mpg-age-bioinformatics/AGEpy/archive/0.6.0.tar.gz --user\n\n\n\n\ngithub\n\n\nGet the latest release from github:\n\n\ngit clone https://github.com/mpg-age-bioinformatics/AGEpy\n\n\n\n\nInstall:\n\n\ncd AGEpy\npython setup.py install --user\n\n\n\n\nand then update to the latest release whenever required with:\n\n\ncd AGEpy\ngit pull\npython setup.py install --user --force\n\n\n\n\n\nAlternatively you can also install the package with a symlink, so that changes\nto the source files will be immediately available to users of the package on\nyour system:\n\n\ncd AGEpy\npython setup.py develop --user\n\n\n\n\nBe aware that with the develop option you won't be able to properly update once new scripts are added.\n\n\nHelp\n\n\nIn bash:\n\n\npydoc AGEpy.AGEpy\n\n\n\n\nIn python:\n\n\nhelp(\nAGEpy.AGEpy\n)\n\n\n\n\nExample usage\n\n\nimport AGEpy as age\n\ngtf=age.readGTF(\n/path/to/file.gtf\n)\n\ngtf.head()", 
            "title": "Home"
        }, 
        {
            "location": "/#agepy", 
            "text": "This python package contains Bioinformatics tools developed at the\nBioinformatics Core Facility of the Max Planck Institute for Biology of Ageing.   Max Planck Institute for Biology of Ageing \nJoseph-Stelzmann-Str. 9b \nD-50931 Cologne \nGermany", 
            "title": "AGEpy"
        }, 
        {
            "location": "/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/#pip", 
            "text": "pip install https://github.com/mpg-age-bioinformatics/AGEpy/archive/0.6.0.tar.gz --user", 
            "title": "pip"
        }, 
        {
            "location": "/#github", 
            "text": "Get the latest release from github:  git clone https://github.com/mpg-age-bioinformatics/AGEpy  Install:  cd AGEpy\npython setup.py install --user  and then update to the latest release whenever required with:  cd AGEpy\ngit pull\npython setup.py install --user --force  Alternatively you can also install the package with a symlink, so that changes\nto the source files will be immediately available to users of the package on\nyour system:  cd AGEpy\npython setup.py develop --user  Be aware that with the develop option you won't be able to properly update once new scripts are added.", 
            "title": "github"
        }, 
        {
            "location": "/#help", 
            "text": "In bash:  pydoc AGEpy.AGEpy  In python:  help( AGEpy.AGEpy )", 
            "title": "Help"
        }, 
        {
            "location": "/#example-usage", 
            "text": "import AGEpy as age\n\ngtf=age.readGTF( /path/to/file.gtf )\n\ngtf.head()", 
            "title": "Example usage"
        }, 
        {
            "location": "/cookbook/", 
            "text": "", 
            "title": "Cookbook"
        }, 
        {
            "location": "/modules/bed/", 
            "text": "GetBEDnarrowPeakgz\n\n\nReads a gz compressed BED narrow peak file from a web address or local file and returns a pandas dataframe.\n\n\n\n\n\n\nURL_or_PATH_TO_file\n source of input bed. Either a web link or a path to a local file.\n\n\n\n\n\n\nreturns\n a pandas dataframe of the inpud bed.\n\n\n\n\n\n\n import AGEpy as age\n\n\n eCLIP_1_bednarrowPeak=\nhttps://www.encodeproject.org/files/ENCFF066PCT/@@download/ENCFF066PCT.bed.gz\n\n\n bed=age.GetBEDnarrowPeakgz(eCLIP_1_bednarrowPeak)\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n\n\n\n\nwriteBED\n\n\nWrites a bed dataframe into a bed file.\n\n\n\n\ninBED\n a pandas dataframe with the contents of the bed file to be written.\n\n\n\n\nfile_path\n path to target file.\n\n\n\n\n\n\nreturns\n nothing.\n\n\n\n\n\n\n import AGEpy as age\n\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n age.writeBED(bed,\n/path/to/file.bed\n)\n\n\n\n\n\n\ndfTObedtool\n\n\nTransforms a pandas dataframe into a bedtool. Requires \nbedtools\n to be in your \npath\n.\n\n\n\n\ndf\n a pandas dataframe.\n\n\nreturns\n a bedtool.\n\n\n\n\n import AGEpy as age\n\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n bedtool=age.dfTObedtool(bed)\n\n print bedtool.head()\n\nchr7    139371278   139371296   Peak_0  1000    +   5.09062636514014    48.9834262537309    -1  -1\nchr7    139371257   139371278   Peak_1  1000    +   5.0840236303159 48.7463712698062    -1  -1\nchr7    155781335   155781431   Peak_2  1000    +   3.70481328524336    42.6519289009201    -1  -1\nchr7    87156569    87156676    Peak_3  1000    +   3.95023151551588    37.7848384917051    -1  -1\nchr7    105073472   105073521   Peak_4  1000    +   4.14556204062503    34.0756845242392    -1  -1\nchr7    128761857   128761952   Peak_5  1000    +   4.02131461357736    33.9350181783027    -1  -1\nchr7    121296414   121296454   Peak_6  1000    +   3.50632247892067    30.2512926812531    -1  -1\nchr7    139368342   139368352   Peak_7  1000    +   4.41912711395099    29.6666535015756    -1  -1\nchr7    87155583    87155635    Peak_8  1000    +   4.08769554637519    29.3752024210392    -1  -1\nchr7    105540000   105540028   Peak_9  1000    +   4.2212263105571 29.0451450847765    -1  -1\n\n\n print type(bed)\n\n\nclass 'pandas.core.frame.DataFrame'\n\n\n\n print type(bedtool)\n\n\nclass 'pybedtools.bedtool.BedTool'\n\n\n\n\n\n\n\nGetPeaksExons\n\n\nAnnotates a bedtool, BED narrow peak.\n\n\n\n\nbed\n a pandas dataframe in bed format\n\n\n\n\nparsedGTF\n a parsed GTF file as outputed by parseGTF()\n\n\n\n\n\n\nreturns\n a Pandas dataframe\n\n\n\n\n\n\n import AGEpy as age\n\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n GTF=age.readGTF(\n/beegfs/group_bit/data/projects/departments/Bioinformatics/bit_RNAseq_eCLIP/downloads/gencode.v24.primary_assembly.annotation.gtf\n)\n\n print GTF.head()\n\nseqname  source     feature  start    end score strand frame  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .   \n2    chr1  HAVANA        exon  11869  12227     .      +     .   \n3    chr1  HAVANA        exon  12613  12721     .      +     .   \n4    chr1  HAVANA        exon  13221  14409     .      +     .   \n\n                                         attribute  \n0  gene_id \nENSG00000223972.5\n; gene_type \ntransc...\n  \n1  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n2  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n3  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n4  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n\n\n GTFpa=age.parseGTF(GTF)\n\n print GTFpa.head()\n\nseqname  source     feature  start    end score strand frame gene_status  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .       KNOWN   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .       KNOWN   \n2    chr1  HAVANA        exon  11869  12227     .      +     .       KNOWN   \n3    chr1  HAVANA        exon  12613  12721     .      +     .       KNOWN   \n4    chr1  HAVANA        exon  13221  14409     .      +     .       KNOWN   \n\n            havana_gene    ...               exon_id      transcript_id  \\\n0  OTTHUMG00000000961.2    ...                   NaN                NaN   \n1  OTTHUMG00000000961.2    ...                   NaN  ENST00000456328.2   \n2  OTTHUMG00000000961.2    ...     ENSE00002234944.1  ENST00000456328.2   \n3  OTTHUMG00000000961.2    ...     ENSE00003582793.1  ENST00000456328.2   \n4  OTTHUMG00000000961.2    ...     ENSE00002312635.1  ENST00000456328.2   \n\n  exon_number  ont     havana_transcript ccdsid transcript_name  \\\n0         NaN  NaN                   NaN    NaN             NaN   \n1         NaN  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n2           1  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n3           2  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n4           3  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n\n                            gene_type transcript_status gene_name  \n0  transcribed_unprocessed_pseudogene               NaN   DDX11L1  \n1  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n2  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n3  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n4  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1\n\n\n bedAn=age.GetPeaksExons(bed,GTFpa)\n\n print bedAn.head()\n\nchrom  chromStart   chromEnd     name  score strand  signalValue  \\\n0  chr7   155781335  155781431   Peak_2   1000      +     3.704813   \n1  chr7   155781335  155781431   Peak_2   1000      +     3.704813   \n2  chr7   121296414  121296454   Peak_6   1000      +     3.506322   \n3  chr7    87155538   87155583  Peak_16   1000      +     4.077391   \n4  chr7   107904733  107904812  Peak_17   1000      +     3.674368   \n\n   -log10(pValue)  -log10(qvalue)  peak         ...           \\\n0       42.651929              -1    -1         ...            \n1       42.651929              -1    -1         ...            \n2       30.251293              -1    -1         ...            \n3       22.798739              -1    -1         ...            \n4       21.118496              -1    -1         ...            \n\n              gene_id  exon_id_count  exon_id norm. mean -log10(pValue)  \\\n0  ENSG00000184863.10              1                          42.651929   \n1  ENSG00000184863.10              1                          42.651929   \n2  ENSG00000106034.17              1                          30.251293   \n3  ENSG00000135164.18              3                        2951.868281   \n4  ENSG00000091140.12              1                          21.118496   \n\n  exon_id signalValue transcript_id_count  \\\n0            3.704813                   1   \n1            3.704813                   1   \n2            3.506322                   1   \n3           42.703999                   3   \n4            3.674368                   1   \n\n  transcript_id norm. mean -log10(pValue)  transcript_id signalValue  \\\n0                               42.651929                   3.704813   \n1                               42.651929                   3.704813   \n2                               30.251293                   3.506322   \n3                             2951.868281                  42.703999   \n4                               21.118496                   3.674368   \n\n  gene_id_count gene_id norm. mean -log10(pValue)  gene_id signalValue  \n0             4                        116.619012            17.830941  \n1             4                        116.619012            17.830941  \n2             2                         30.251293             2.144090  \n3             8                       3300.707425            73.902289  \n4             5                        135.139064            22.210269  \n\n\n\n\ngene_id_count\n: number of intervals overlapping this gene\n\n\ntranscript_id_count\n: number of intervals overlapping this transcript\n\n\nexon_id_count\n: number of intervals overlapping this exon", 
            "title": "bed"
        }, 
        {
            "location": "/modules/bed/#getbednarrowpeakgz", 
            "text": "Reads a gz compressed BED narrow peak file from a web address or local file and returns a pandas dataframe.    URL_or_PATH_TO_file  source of input bed. Either a web link or a path to a local file.    returns  a pandas dataframe of the inpud bed.     import AGEpy as age  eCLIP_1_bednarrowPeak= https://www.encodeproject.org/files/ENCFF066PCT/@@download/ENCFF066PCT.bed.gz   bed=age.GetBEDnarrowPeakgz(eCLIP_1_bednarrowPeak)  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1", 
            "title": "GetBEDnarrowPeakgz"
        }, 
        {
            "location": "/modules/bed/#writebed", 
            "text": "Writes a bed dataframe into a bed file.   inBED  a pandas dataframe with the contents of the bed file to be written.   file_path  path to target file.    returns  nothing.     import AGEpy as age  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1  age.writeBED(bed, /path/to/file.bed )", 
            "title": "writeBED"
        }, 
        {
            "location": "/modules/bed/#dftobedtool", 
            "text": "Transforms a pandas dataframe into a bedtool. Requires  bedtools  to be in your  path .   df  a pandas dataframe.  returns  a bedtool.    import AGEpy as age  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1  bedtool=age.dfTObedtool(bed)  print bedtool.head()\n\nchr7    139371278   139371296   Peak_0  1000    +   5.09062636514014    48.9834262537309    -1  -1\nchr7    139371257   139371278   Peak_1  1000    +   5.0840236303159 48.7463712698062    -1  -1\nchr7    155781335   155781431   Peak_2  1000    +   3.70481328524336    42.6519289009201    -1  -1\nchr7    87156569    87156676    Peak_3  1000    +   3.95023151551588    37.7848384917051    -1  -1\nchr7    105073472   105073521   Peak_4  1000    +   4.14556204062503    34.0756845242392    -1  -1\nchr7    128761857   128761952   Peak_5  1000    +   4.02131461357736    33.9350181783027    -1  -1\nchr7    121296414   121296454   Peak_6  1000    +   3.50632247892067    30.2512926812531    -1  -1\nchr7    139368342   139368352   Peak_7  1000    +   4.41912711395099    29.6666535015756    -1  -1\nchr7    87155583    87155635    Peak_8  1000    +   4.08769554637519    29.3752024210392    -1  -1\nchr7    105540000   105540028   Peak_9  1000    +   4.2212263105571 29.0451450847765    -1  -1  print type(bed) class 'pandas.core.frame.DataFrame'   print type(bedtool) class 'pybedtools.bedtool.BedTool'", 
            "title": "dfTObedtool"
        }, 
        {
            "location": "/modules/bed/#getpeaksexons", 
            "text": "Annotates a bedtool, BED narrow peak.   bed  a pandas dataframe in bed format   parsedGTF  a parsed GTF file as outputed by parseGTF()    returns  a Pandas dataframe     import AGEpy as age  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1  GTF=age.readGTF( /beegfs/group_bit/data/projects/departments/Bioinformatics/bit_RNAseq_eCLIP/downloads/gencode.v24.primary_assembly.annotation.gtf )  print GTF.head()\n\nseqname  source     feature  start    end score strand frame  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .   \n2    chr1  HAVANA        exon  11869  12227     .      +     .   \n3    chr1  HAVANA        exon  12613  12721     .      +     .   \n4    chr1  HAVANA        exon  13221  14409     .      +     .   \n\n                                         attribute  \n0  gene_id  ENSG00000223972.5 ; gene_type  transc...   \n1  gene_id  ENSG00000223972.5 ; transcript_id  EN...   \n2  gene_id  ENSG00000223972.5 ; transcript_id  EN...   \n3  gene_id  ENSG00000223972.5 ; transcript_id  EN...   \n4  gene_id  ENSG00000223972.5 ; transcript_id  EN...     GTFpa=age.parseGTF(GTF)  print GTFpa.head()\n\nseqname  source     feature  start    end score strand frame gene_status  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .       KNOWN   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .       KNOWN   \n2    chr1  HAVANA        exon  11869  12227     .      +     .       KNOWN   \n3    chr1  HAVANA        exon  12613  12721     .      +     .       KNOWN   \n4    chr1  HAVANA        exon  13221  14409     .      +     .       KNOWN   \n\n            havana_gene    ...               exon_id      transcript_id  \\\n0  OTTHUMG00000000961.2    ...                   NaN                NaN   \n1  OTTHUMG00000000961.2    ...                   NaN  ENST00000456328.2   \n2  OTTHUMG00000000961.2    ...     ENSE00002234944.1  ENST00000456328.2   \n3  OTTHUMG00000000961.2    ...     ENSE00003582793.1  ENST00000456328.2   \n4  OTTHUMG00000000961.2    ...     ENSE00002312635.1  ENST00000456328.2   \n\n  exon_number  ont     havana_transcript ccdsid transcript_name  \\\n0         NaN  NaN                   NaN    NaN             NaN   \n1         NaN  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n2           1  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n3           2  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n4           3  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n\n                            gene_type transcript_status gene_name  \n0  transcribed_unprocessed_pseudogene               NaN   DDX11L1  \n1  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n2  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n3  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n4  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  bedAn=age.GetPeaksExons(bed,GTFpa)  print bedAn.head()\n\nchrom  chromStart   chromEnd     name  score strand  signalValue  \\\n0  chr7   155781335  155781431   Peak_2   1000      +     3.704813   \n1  chr7   155781335  155781431   Peak_2   1000      +     3.704813   \n2  chr7   121296414  121296454   Peak_6   1000      +     3.506322   \n3  chr7    87155538   87155583  Peak_16   1000      +     4.077391   \n4  chr7   107904733  107904812  Peak_17   1000      +     3.674368   \n\n   -log10(pValue)  -log10(qvalue)  peak         ...           \\\n0       42.651929              -1    -1         ...            \n1       42.651929              -1    -1         ...            \n2       30.251293              -1    -1         ...            \n3       22.798739              -1    -1         ...            \n4       21.118496              -1    -1         ...            \n\n              gene_id  exon_id_count  exon_id norm. mean -log10(pValue)  \\\n0  ENSG00000184863.10              1                          42.651929   \n1  ENSG00000184863.10              1                          42.651929   \n2  ENSG00000106034.17              1                          30.251293   \n3  ENSG00000135164.18              3                        2951.868281   \n4  ENSG00000091140.12              1                          21.118496   \n\n  exon_id signalValue transcript_id_count  \\\n0            3.704813                   1   \n1            3.704813                   1   \n2            3.506322                   1   \n3           42.703999                   3   \n4            3.674368                   1   \n\n  transcript_id norm. mean -log10(pValue)  transcript_id signalValue  \\\n0                               42.651929                   3.704813   \n1                               42.651929                   3.704813   \n2                               30.251293                   3.506322   \n3                             2951.868281                  42.703999   \n4                               21.118496                   3.674368   \n\n  gene_id_count gene_id norm. mean -log10(pValue)  gene_id signalValue  \n0             4                        116.619012            17.830941  \n1             4                        116.619012            17.830941  \n2             2                         30.251293             2.144090  \n3             8                       3300.707425            73.902289  \n4             5                        135.139064            22.210269    gene_id_count : number of intervals overlapping this gene  transcript_id_count : number of intervals overlapping this transcript  exon_id_count : number of intervals overlapping this exon", 
            "title": "GetPeaksExons"
        }, 
        {
            "location": "/modules/biom/", 
            "text": "datasetsBM\n\n\nLists BioMart datasets.\n\n\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n nothing\n\n\n\n\n\n\n import AGEpy as age\n\n age.datasetsBM()\n\nu'acarolinensis_gene_ensembl'   Anole lizard genes (AnoCar2.0),\nu'acarolinensis_genomic_sequence'   Anole lizard sequences (AnoCar2.0),\nu'amelanoleuca_gene_ensembl'    Panda genes (ailMel1),\nu'amelanoleuca_genomic_sequence'    Panda sequences (ailMel1),\nu'amexicanus_gene_ensembl'  Cave fish genes (AstMex102),\nu'amexicanus_genomic_sequence'  Cave fish sequences (AstMex102),\nu'anancymaae_gene_ensembl'  Ma's night monkey genes (Anan_2.0),\nu'anancymaae_genomic_sequence'  Ma's night monkey sequences (Anan_2.0),\nu'aplatyrhynchos_gene_ensembl'  Duck genes (BGI_duck_1.0),\nu'aplatyrhynchos_genomic_sequence'  Duck sequences (BGI_duck_1.0),\nu'btaurus_gene_ensembl' Cow genes (UMD3.1),\nu'btaurus_genomic_sequence' Cow sequences (UMD3.1),\nu'btaurus_marker_end'   marker_feature_end,\nu'btaurus_marker_start' marker_feature,\nu'btaurus_qtl_feature'  qtl_feature,\n.\n.\n.\n\n\n\n\n\n\nfiltersBM\n\n\nLists BioMart filters for a specific dataset.\n\n\n\n\ndataset\n dataset to list filters of\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n nothing\n\n\n\n\n\n\n import AGEpy as age\n\n age.filtersBM('hsapiens_gene_ensembl')\n\nu'affy_hc_g110' 'AFFY HC G110 probe ID(s) [e.g. 266_s_at]' (type    id_list, values []),\nu'affy_hg_focus'    'AFFY HG Focus probe ID(s) [e.g. 212481_s_at]' (type    id_list, values []),\nu'affy_hg_u133_plus_2'  'AFFY HG U133 Plus 2 probe ID(s) [e.g. 1553551_s_at]' (type id_list, values []),\nu'affy_hg_u133a'    'AFFY HG U133A probe ID(s) [e.g. 211600_at]' (type  id_list, values []),\nu'affy_hg_u133a_2'  'AFFY HG U133A 2 probe ID(s) [e.g. 211600_at]' (type    id_list, values []),\nu'affy_hg_u133b'    'AFFY HG U133B probe ID(s) [e.g. 224321_at]' (type  id_list, values []),\nu'affy_hg_u95a' 'AFFY HG U95A probe ID(s) [e.g. 33866_at]' (type    id_list, values []),\nu'affy_hg_u95av2'   'AFFY HG U95Av2 probe ID(s) [e.g. 33866_at]' (type  id_list, values []),\nu'affy_hg_u95b' 'AFFY HG U95B probe ID(s) [e.g. 48794_s_at]' (type  id_list, values []),\nu'affy_hg_u95c' 'AFFY HG U95C probe ID(s) [e.g. 66888_at]' (type    id_list, values []),\nu'affy_hg_u95d' 'AFFY HG U95D probe ID(s) [e.g. 70806_at]' (type    id_list, values []),\nu'affy_hg_u95e' 'AFFY HG U95E probe ID(s) [e.g. 88289_at]' (type    id_list, values []),\nu'affy_hta_2_0' 'AFFY HTA 2 0 probe ID(s) [e.g. TC04001102.hg]' (type   id_list, values []),\nu'affy_huex_1_0_st_v2'  'AFFY HuEx 1 0 st v2 probe ID(s) [e.g. 4037584]' (type  id_list, values []),\nu'affy_hugene_1_0_st_v1'    'AFFY HuGene 1 0 st v1 probe ID(s) [e.g. 8165644]' (type    id_list, values []),\nu'affy_hugene_2_0_st_v1'    'AFFY HuGene 2 0 st v1 probe ID(s) [e.g. 17100641]' (type   id_list, values []),\nu'affy_hugenefl'    'AFFY HuGeneFL probe ID(s) [e.g. Z70759_at]' (type  id_list, values []),\nu'affy_primeview'   'AFFY PrimeView probe ID(s) [e.g. 11761516_x_at]' (type id_list, values []),\n.\n.\n.\n\n\n\n\n\n\n\nattributesBM\n\n\nLists BioMart attributes for a specific dataset.\n\n\n\n\ndataset\n dataset to list attributes of\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n nothing\n\n\n\n\n\n\n import AGEpy as age\n\n age.attributesBM('hsapiens_gene_ensembl')\n\nu'3_utr_end'    '3' UTR end' (default   False),\n u'3_utr_start' '3' UTR start' (default False),\n u'3utr'    '3' UTR' (default   False),\n u'5_utr_end'   '5' UTR end' (default   False),\n u'5_utr_start' '5' UTR start' (default False),\n u'5utr'    '5' UTR' (default   False),\n u'acarolinensis_homolog_associated_gene_name'  'Anole lizard gene name' (default   False),\n u'acarolinensis_homolog_canonical_transcript_protein'  'Query protein or transcript ID' (default   False),\n u'acarolinensis_homolog_chrom_end' 'Anole lizard chromosome/scaffold end (bp)' (default    False),\n u'acarolinensis_homolog_chrom_start'   'Anole lizard chromosome/scaffold start (bp)' (default  False),\n u'acarolinensis_homolog_chromosome'    'Anole lizard chromosome/scaffold name' (default    False),\n u'acarolinensis_homolog_dn'    'dN with Anole lizard' (default False),\n u'acarolinensis_homolog_ds'    'dS with Anole lizard' (default False),\n u'acarolinensis_homolog_ensembl_gene'  'Anole lizard gene stable ID' (default  False),\n .\n .\n .\n\n\n\n\n\n\n\nqueryBM\n\n\nQueries BioMart.\n\n\n\n\nquery_attributes\n list of attributes to recover from BioMart\n\n\nquery_dataset\n dataset to query\n\n\nquery_filter\n one BioMart filter associated with the items being queried\n\n\nquery_items\n list of items to be queried (must assoiate with given filter)\n\n\nquery_querydic\n for complex queries this option should be used instead of 'filters' and 'items' and a dictionary of filters provided here eg. querydic={\"filter1\":[\"item1\",\"item2\"],\"filter2\":[\"item3\",\"item4\"]}. If using querydic, don't query more than 350 items at once.\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n a Pandas dataframe of the queried attributes\n\n\n\n\n\n\n import AGEpy as age\n\n queryDf=queryBM(query_attributes=[\nensembl_gene_id\n,\nexternal_gene_name\n, \\\n                                  \ngo_id\n,\nname_1006\n,\ndefinition_1006\n],\\\n                query_dataset='hsapiens_gene_ensembl')\n\n print queryDf.head()\n\nensembl_gene_id external_gene_name       go_id            name_1006  \\\n0  ENSG00000283891             MIR628  GO:0005615  extracellular space   \n1  ENSG00000251931          RNU6-871P                                    \n2  ENSG00000207766             MIR626                                    \n3  ENSG00000275323         AC012314.7  GO:0003723          RNA binding   \n4  ENSG00000275323         AC012314.7  GO:0005634              nucleus   \n\n                                     definition_1006  \n0  \nThat part of a multicellular organism outside...\n  \n1                                                     \n2                                                     \n3  \nInteracting selectively and non-covalently wi...\n  \n4  \nA membrane-bounded organelle of eukaryotic ce...\n  \n\n\n\n\n\n\nFilterGOstring\n\n\nFilters GO terms based on given strings using ENSEMBL's biomart homology mapping.\n\n\n\n\nnames_filter\n list of substrings to filter GO names on. Default=[\"age-\", \"aging\", \"aged\", 'aging', 'aging.', 'aging,']\n\n\nexclude_names\n list of substrings to be used for exclusion of GO names. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                       \"stage-1\",\"cage-like\",\"message-specific\",\n                       \"damage-associated\",\"stage-specific\",\"foraging\",\n                       \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]\n\n\ndefs_filter\n list of substrings to filter GO defenitions on. Default=[\" age-\", \" aging\", \" aged\", ' aging', ' aging.', ' aging,']\n\n\nexclude_defs\n list of substrings to be used for exclustion of GO defenitions. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                         \"stage-1\",\"cage-like\",\"message-specific\",\n                         \"damage-associated\",\"stage-specific\",\"foraging\",\n                         \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]\n\n\nhost\n biomart host server, default=\"http://www.ensembl.org/biomart\"\n\n\nHSA\n retrieved hsa dataframe\n\n\nMUS\n retrieved mus dataframe\n\n\nCEL\n retrieved cel dataframe\n\n\n\n\nDMEL\n retrieved dmel dataframe\n\n\n\n\n\n\nreturns\n  homology_df, HSA, MUS, CEL, DMEL\n\n\n\n\n\n\n import AGEpy as age\n\n homology_df, HSA, MUS, CEL, DMEL=age.FilterGOstring()\n\n print homology_df.head()\n\nHSA_ensembl_gene_id HSA_external_gene_name  \\\n0     ENSG00000000003                 TSPAN6   \n1     ENSG00000000005                   TNMD   \n2     ENSG00000000460               C1orf112   \n3     ENSG00000000971                    CFH   \n4     ENSG00000002079                  MYH16   \n\n                                         HSA_go_id  \\\n0  GO:0039532, , GO:0070062, GO:0016021, GO:00160...   \n1  GO:0005737, , GO:0016020, GO:0035990, GO:00717...   \n2                                                NaN   \n3  , GO:0030449, GO:0070062, GO:0045087, GO:00725...   \n4                                                NaN   \n\n                                     HSA_name_1006  \\\n0  , negative regulation of NIK/NF-kappaB signali...   \n1  , nuclear envelope, cytoplasm, negative regula...   \n2                                                NaN   \n3  , innate immune response, heparan sulfate prot...   \n4                                                NaN   \n\n                               HSA_definition_1006 MUS_ensembl_gene_id  \\\n0  \nThe component of a membrane consisting of the...\n  ENSMUSG00000067377   \n1  \nThe component of a membrane consisting of the...\n  ENSMUSG00000031250   \n2                                                NaN   ENSMUSG00000041406   \n3  \nInteracting selectively and non-covalently wi...\n                 NaN   \n4                                                NaN                  NaN   \n\nCEL_ensembl_gene_id DMEL_ensembl_gene_id MUS_external_gene_name  \\\n0                 NaN                  NaN                 Tspan6   \n1                 NaN                  NaN                   Tnmd   \n2                 NaN                  NaN               BC055324   \n3                 NaN                  NaN                   None   \n4                 NaN                  NaN                   None   \n\n                                         MUS_go_id   ...     \\\n0  GO:0039532, , GO:0070062, GO:0016021, GO:00160...   ...      \n1  GO:0016020, GO:0035990, GO:0071773, GO:0016021...   ...      \n2               GO:0005575, GO:0008150, GO:0003674,    ...      \n3                                               None   ...      \n4                                               None   ...      \n\n                               MUS_definition_1006 CEL_external_gene_name  \\\n0  \nThe component of a membrane consisting of the...\n                   None   \n1  \nThe component of a membrane consisting of the...\n                   None   \n2  \nElemental activities, such as catalysis or bi...\n                   None   \n3                                               None                    None   \n4                                               None                    None   \n\nCEL_go_id CEL_name_1006 CEL_definition_1006 DMEL_external_gene_name  \\\n0      None          None                None                    None   \n1      None          None                None                    None   \n2      None          None                None                    None   \n3      None          None                None                    None   \n4      None          None                None                    None   \n\nDMEL_go_id DMEL_name_1006 DMEL_definition_1006 evidence  \n0       None           None                 None      NaN  \n1       None           None                 None      NaN  \n2       None           None                 None      NaN  \n3       None           None                 None      NaN  \n4       None           None                 None      NaN  \n\n\n\n\n\nevidence\n indicates from which organisms there is evidence of the intended string", 
            "title": "biom"
        }, 
        {
            "location": "/modules/biom/#datasetsbm", 
            "text": "Lists BioMart datasets.    host  address of the host server, default='http://www.ensembl.org/biomart'    returns  nothing     import AGEpy as age  age.datasetsBM()\n\nu'acarolinensis_gene_ensembl'   Anole lizard genes (AnoCar2.0),\nu'acarolinensis_genomic_sequence'   Anole lizard sequences (AnoCar2.0),\nu'amelanoleuca_gene_ensembl'    Panda genes (ailMel1),\nu'amelanoleuca_genomic_sequence'    Panda sequences (ailMel1),\nu'amexicanus_gene_ensembl'  Cave fish genes (AstMex102),\nu'amexicanus_genomic_sequence'  Cave fish sequences (AstMex102),\nu'anancymaae_gene_ensembl'  Ma's night monkey genes (Anan_2.0),\nu'anancymaae_genomic_sequence'  Ma's night monkey sequences (Anan_2.0),\nu'aplatyrhynchos_gene_ensembl'  Duck genes (BGI_duck_1.0),\nu'aplatyrhynchos_genomic_sequence'  Duck sequences (BGI_duck_1.0),\nu'btaurus_gene_ensembl' Cow genes (UMD3.1),\nu'btaurus_genomic_sequence' Cow sequences (UMD3.1),\nu'btaurus_marker_end'   marker_feature_end,\nu'btaurus_marker_start' marker_feature,\nu'btaurus_qtl_feature'  qtl_feature,\n.\n.\n.", 
            "title": "datasetsBM"
        }, 
        {
            "location": "/modules/biom/#filtersbm", 
            "text": "Lists BioMart filters for a specific dataset.   dataset  dataset to list filters of   host  address of the host server, default='http://www.ensembl.org/biomart'    returns  nothing     import AGEpy as age  age.filtersBM('hsapiens_gene_ensembl')\n\nu'affy_hc_g110' 'AFFY HC G110 probe ID(s) [e.g. 266_s_at]' (type    id_list, values []),\nu'affy_hg_focus'    'AFFY HG Focus probe ID(s) [e.g. 212481_s_at]' (type    id_list, values []),\nu'affy_hg_u133_plus_2'  'AFFY HG U133 Plus 2 probe ID(s) [e.g. 1553551_s_at]' (type id_list, values []),\nu'affy_hg_u133a'    'AFFY HG U133A probe ID(s) [e.g. 211600_at]' (type  id_list, values []),\nu'affy_hg_u133a_2'  'AFFY HG U133A 2 probe ID(s) [e.g. 211600_at]' (type    id_list, values []),\nu'affy_hg_u133b'    'AFFY HG U133B probe ID(s) [e.g. 224321_at]' (type  id_list, values []),\nu'affy_hg_u95a' 'AFFY HG U95A probe ID(s) [e.g. 33866_at]' (type    id_list, values []),\nu'affy_hg_u95av2'   'AFFY HG U95Av2 probe ID(s) [e.g. 33866_at]' (type  id_list, values []),\nu'affy_hg_u95b' 'AFFY HG U95B probe ID(s) [e.g. 48794_s_at]' (type  id_list, values []),\nu'affy_hg_u95c' 'AFFY HG U95C probe ID(s) [e.g. 66888_at]' (type    id_list, values []),\nu'affy_hg_u95d' 'AFFY HG U95D probe ID(s) [e.g. 70806_at]' (type    id_list, values []),\nu'affy_hg_u95e' 'AFFY HG U95E probe ID(s) [e.g. 88289_at]' (type    id_list, values []),\nu'affy_hta_2_0' 'AFFY HTA 2 0 probe ID(s) [e.g. TC04001102.hg]' (type   id_list, values []),\nu'affy_huex_1_0_st_v2'  'AFFY HuEx 1 0 st v2 probe ID(s) [e.g. 4037584]' (type  id_list, values []),\nu'affy_hugene_1_0_st_v1'    'AFFY HuGene 1 0 st v1 probe ID(s) [e.g. 8165644]' (type    id_list, values []),\nu'affy_hugene_2_0_st_v1'    'AFFY HuGene 2 0 st v1 probe ID(s) [e.g. 17100641]' (type   id_list, values []),\nu'affy_hugenefl'    'AFFY HuGeneFL probe ID(s) [e.g. Z70759_at]' (type  id_list, values []),\nu'affy_primeview'   'AFFY PrimeView probe ID(s) [e.g. 11761516_x_at]' (type id_list, values []),\n.\n.\n.", 
            "title": "filtersBM"
        }, 
        {
            "location": "/modules/biom/#attributesbm", 
            "text": "Lists BioMart attributes for a specific dataset.   dataset  dataset to list attributes of   host  address of the host server, default='http://www.ensembl.org/biomart'    returns  nothing     import AGEpy as age  age.attributesBM('hsapiens_gene_ensembl')\n\nu'3_utr_end'    '3' UTR end' (default   False),\n u'3_utr_start' '3' UTR start' (default False),\n u'3utr'    '3' UTR' (default   False),\n u'5_utr_end'   '5' UTR end' (default   False),\n u'5_utr_start' '5' UTR start' (default False),\n u'5utr'    '5' UTR' (default   False),\n u'acarolinensis_homolog_associated_gene_name'  'Anole lizard gene name' (default   False),\n u'acarolinensis_homolog_canonical_transcript_protein'  'Query protein or transcript ID' (default   False),\n u'acarolinensis_homolog_chrom_end' 'Anole lizard chromosome/scaffold end (bp)' (default    False),\n u'acarolinensis_homolog_chrom_start'   'Anole lizard chromosome/scaffold start (bp)' (default  False),\n u'acarolinensis_homolog_chromosome'    'Anole lizard chromosome/scaffold name' (default    False),\n u'acarolinensis_homolog_dn'    'dN with Anole lizard' (default False),\n u'acarolinensis_homolog_ds'    'dS with Anole lizard' (default False),\n u'acarolinensis_homolog_ensembl_gene'  'Anole lizard gene stable ID' (default  False),\n .\n .\n .", 
            "title": "attributesBM"
        }, 
        {
            "location": "/modules/biom/#querybm", 
            "text": "Queries BioMart.   query_attributes  list of attributes to recover from BioMart  query_dataset  dataset to query  query_filter  one BioMart filter associated with the items being queried  query_items  list of items to be queried (must assoiate with given filter)  query_querydic  for complex queries this option should be used instead of 'filters' and 'items' and a dictionary of filters provided here eg. querydic={\"filter1\":[\"item1\",\"item2\"],\"filter2\":[\"item3\",\"item4\"]}. If using querydic, don't query more than 350 items at once.   host  address of the host server, default='http://www.ensembl.org/biomart'    returns  a Pandas dataframe of the queried attributes     import AGEpy as age  queryDf=queryBM(query_attributes=[ ensembl_gene_id , external_gene_name , \\\n                                   go_id , name_1006 , definition_1006 ],\\\n                query_dataset='hsapiens_gene_ensembl')  print queryDf.head()\n\nensembl_gene_id external_gene_name       go_id            name_1006  \\\n0  ENSG00000283891             MIR628  GO:0005615  extracellular space   \n1  ENSG00000251931          RNU6-871P                                    \n2  ENSG00000207766             MIR626                                    \n3  ENSG00000275323         AC012314.7  GO:0003723          RNA binding   \n4  ENSG00000275323         AC012314.7  GO:0005634              nucleus   \n\n                                     definition_1006  \n0   That part of a multicellular organism outside...   \n1                                                     \n2                                                     \n3   Interacting selectively and non-covalently wi...   \n4   A membrane-bounded organelle of eukaryotic ce...", 
            "title": "queryBM"
        }, 
        {
            "location": "/modules/biom/#filtergostring", 
            "text": "Filters GO terms based on given strings using ENSEMBL's biomart homology mapping.   names_filter  list of substrings to filter GO names on. Default=[\"age-\", \"aging\", \"aged\", 'aging', 'aging.', 'aging,']  exclude_names  list of substrings to be used for exclusion of GO names. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                       \"stage-1\",\"cage-like\",\"message-specific\",\n                       \"damage-associated\",\"stage-specific\",\"foraging\",\n                       \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]  defs_filter  list of substrings to filter GO defenitions on. Default=[\" age-\", \" aging\", \" aged\", ' aging', ' aging.', ' aging,']  exclude_defs  list of substrings to be used for exclustion of GO defenitions. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                         \"stage-1\",\"cage-like\",\"message-specific\",\n                         \"damage-associated\",\"stage-specific\",\"foraging\",\n                         \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]  host  biomart host server, default=\"http://www.ensembl.org/biomart\"  HSA  retrieved hsa dataframe  MUS  retrieved mus dataframe  CEL  retrieved cel dataframe   DMEL  retrieved dmel dataframe    returns   homology_df, HSA, MUS, CEL, DMEL     import AGEpy as age  homology_df, HSA, MUS, CEL, DMEL=age.FilterGOstring()  print homology_df.head()\n\nHSA_ensembl_gene_id HSA_external_gene_name  \\\n0     ENSG00000000003                 TSPAN6   \n1     ENSG00000000005                   TNMD   \n2     ENSG00000000460               C1orf112   \n3     ENSG00000000971                    CFH   \n4     ENSG00000002079                  MYH16   \n\n                                         HSA_go_id  \\\n0  GO:0039532, , GO:0070062, GO:0016021, GO:00160...   \n1  GO:0005737, , GO:0016020, GO:0035990, GO:00717...   \n2                                                NaN   \n3  , GO:0030449, GO:0070062, GO:0045087, GO:00725...   \n4                                                NaN   \n\n                                     HSA_name_1006  \\\n0  , negative regulation of NIK/NF-kappaB signali...   \n1  , nuclear envelope, cytoplasm, negative regula...   \n2                                                NaN   \n3  , innate immune response, heparan sulfate prot...   \n4                                                NaN   \n\n                               HSA_definition_1006 MUS_ensembl_gene_id  \\\n0   The component of a membrane consisting of the...   ENSMUSG00000067377   \n1   The component of a membrane consisting of the...   ENSMUSG00000031250   \n2                                                NaN   ENSMUSG00000041406   \n3   Interacting selectively and non-covalently wi...                  NaN   \n4                                                NaN                  NaN   \n\nCEL_ensembl_gene_id DMEL_ensembl_gene_id MUS_external_gene_name  \\\n0                 NaN                  NaN                 Tspan6   \n1                 NaN                  NaN                   Tnmd   \n2                 NaN                  NaN               BC055324   \n3                 NaN                  NaN                   None   \n4                 NaN                  NaN                   None   \n\n                                         MUS_go_id   ...     \\\n0  GO:0039532, , GO:0070062, GO:0016021, GO:00160...   ...      \n1  GO:0016020, GO:0035990, GO:0071773, GO:0016021...   ...      \n2               GO:0005575, GO:0008150, GO:0003674,    ...      \n3                                               None   ...      \n4                                               None   ...      \n\n                               MUS_definition_1006 CEL_external_gene_name  \\\n0   The component of a membrane consisting of the...                    None   \n1   The component of a membrane consisting of the...                    None   \n2   Elemental activities, such as catalysis or bi...                    None   \n3                                               None                    None   \n4                                               None                    None   \n\nCEL_go_id CEL_name_1006 CEL_definition_1006 DMEL_external_gene_name  \\\n0      None          None                None                    None   \n1      None          None                None                    None   \n2      None          None                None                    None   \n3      None          None                None                    None   \n4      None          None                None                    None   \n\nDMEL_go_id DMEL_name_1006 DMEL_definition_1006 evidence  \n0       None           None                 None      NaN  \n1       None           None                 None      NaN  \n2       None           None                 None      NaN  \n3       None           None                 None      NaN  \n4       None           None                 None      NaN    evidence  indicates from which organisms there is evidence of the intended string", 
            "title": "FilterGOstring"
        }, 
        {
            "location": "/modules/cytoscape/", 
            "text": "checkCytoscapeVersion\n\n\nChecks cytoscape version.\n\n\n\n\nhost\n cytoscape host address, default=cytoscape_host\n\n\nport\n cytoscape port, defaul=cytoscape_port\n\n\nreturns\n nothing\n\n\n\n\n import AGEpy as age\n\n age.checkCytoscapeVersion()\n\ncytoscapeVersion 3.6.0\napiVersion v1\n\n\n\n\n\n\ncytoscape\n\n\nGeneral function for interacting with Cytoscape API.\n\n\n\n\nnamespace\n namespace where the request should be executed. eg. \"string\"\n\n\ncommnand\n command to execute. eg. \"protein query\"\n\n\nPARAMs\n a dictionary with the parameters. Check your swagger normaly running on\nhttp://localhost:1234/v1/swaggerUI/swagger-ui/index.html?url=http://localhost:1234/v1/commands/swagger.json\n\n\nhost\n cytoscape host address, default=cytoscape_host\n\n\nport\n cytoscape port, default=cytoscape_port\n\n\nmethod\n type of http call, ie. \"POST\" or \"GET\" or \"HELP\".\n\n\nverbose\n print more information\n\n\nreturns\n For \"POST\" the data in the content's response. For \"GET\" None.\n\n\n\n\n import AGEpy as age\n\n response=age.cytoscape(\nstring\n,\npubmed query\n,{\npubmed\n:\np53 p21\n,\nlimit\n:\n50\n})\n\n print response\n\n{u'SUID': 37560}\n\n\n\n\n\n\nresult\n\n\nDisplays the current network.\n\n\n\n\nfiletype\n file type, default=\"PNG\"\n\n\nsaveas\n /path/to/non/tmp/file.prefix\n\n\nhost\n cytoscape host address, default=cytoscape_host\n\n\nport\n cytoscape port, default=cytoscape_port\n\n\nreturns\n an image\n\n\n\n\n import AGEpy as age\n\n response=age.result()\n\n response\n\n\n\n\n\n\n\n\ngetTableColumns\n\n\nGets tables from cytoscape.\n\n\n\n\ntable\n table to retrieve eg. node\n\n\ncolumns\n columns to retrieve in list format\n\n\nnamespace\n namepsace, default=\"default\"\n\n\nnetwork\n a network name or id, default=\"current\"\n\n\nhost\n cytoscape host address, default=cytoscape_host\n\n\nport\n cytoscape port, default=cytoscape_port\n\n\nverbose\n print more information\n\n\nreturns\n a pandas dataframe\n\n\n\n\n import AGEpy as age\n\n response=age.getTableColumns('node',['display name'])\n\n print response\n\n                     display name\n9606.ENSP00000367207          MYC\n9606.ENSP00000356150         MDM4\n9606.ENSP00000228872       CDKN1B\n9606.ENSP00000361021         PTEN\n9606.ENSP00000265734         CDK6", 
            "title": "cytoscape"
        }, 
        {
            "location": "/modules/cytoscape/#checkcytoscapeversion", 
            "text": "Checks cytoscape version.   host  cytoscape host address, default=cytoscape_host  port  cytoscape port, defaul=cytoscape_port  returns  nothing    import AGEpy as age  age.checkCytoscapeVersion()\n\ncytoscapeVersion 3.6.0\napiVersion v1", 
            "title": "checkCytoscapeVersion"
        }, 
        {
            "location": "/modules/cytoscape/#cytoscape", 
            "text": "General function for interacting with Cytoscape API.   namespace  namespace where the request should be executed. eg. \"string\"  commnand  command to execute. eg. \"protein query\"  PARAMs  a dictionary with the parameters. Check your swagger normaly running on\nhttp://localhost:1234/v1/swaggerUI/swagger-ui/index.html?url=http://localhost:1234/v1/commands/swagger.json  host  cytoscape host address, default=cytoscape_host  port  cytoscape port, default=cytoscape_port  method  type of http call, ie. \"POST\" or \"GET\" or \"HELP\".  verbose  print more information  returns  For \"POST\" the data in the content's response. For \"GET\" None.    import AGEpy as age  response=age.cytoscape( string , pubmed query ,{ pubmed : p53 p21 , limit : 50 })  print response\n\n{u'SUID': 37560}", 
            "title": "cytoscape"
        }, 
        {
            "location": "/modules/cytoscape/#result", 
            "text": "Displays the current network.   filetype  file type, default=\"PNG\"  saveas  /path/to/non/tmp/file.prefix  host  cytoscape host address, default=cytoscape_host  port  cytoscape port, default=cytoscape_port  returns  an image    import AGEpy as age  response=age.result()  response", 
            "title": "result"
        }, 
        {
            "location": "/modules/cytoscape/#gettablecolumns", 
            "text": "Gets tables from cytoscape.   table  table to retrieve eg. node  columns  columns to retrieve in list format  namespace  namepsace, default=\"default\"  network  a network name or id, default=\"current\"  host  cytoscape host address, default=cytoscape_host  port  cytoscape port, default=cytoscape_port  verbose  print more information  returns  a pandas dataframe    import AGEpy as age  response=age.getTableColumns('node',['display name'])  print response\n\n                     display name\n9606.ENSP00000367207          MYC\n9606.ENSP00000356150         MDM4\n9606.ENSP00000228872       CDKN1B\n9606.ENSP00000361021         PTEN\n9606.ENSP00000265734         CDK6", 
            "title": "getTableColumns"
        }, 
        {
            "location": "/modules/david/", 
            "text": "", 
            "title": "david"
        }, 
        {
            "location": "/modules/fasta/", 
            "text": "", 
            "title": "fasta"
        }, 
        {
            "location": "/modules/go/", 
            "text": "", 
            "title": "go"
        }, 
        {
            "location": "/modules/gtf/", 
            "text": "", 
            "title": "gtf"
        }, 
        {
            "location": "/modules/homology/", 
            "text": "", 
            "title": "homology"
        }, 
        {
            "location": "/modules/kegg/", 
            "text": "", 
            "title": "kegg"
        }, 
        {
            "location": "/modules/meme/", 
            "text": "", 
            "title": "meme"
        }, 
        {
            "location": "/modules/plots/", 
            "text": "", 
            "title": "plots"
        }, 
        {
            "location": "/modules/sam/", 
            "text": "", 
            "title": "sam"
        }, 
        {
            "location": "/executables/adiff/", 
            "text": "", 
            "title": "aDiff"
        }
    ]
}