{
    "docs": [
        {
            "location": "/", 
            "text": "AGEpy \n \n\n\nThis python package contains Bioinformatics tools developed at the\nBioinformatics Core Facility of the Max Planck Institute for Biology of Ageing.\n\n\n\n\nMax Planck Institute for Biology of Ageing\n\nJoseph-Stelzmann-Str. 9b\n\nD-50931 Cologne\n\nGermany\n\n\n\n\nInstallation\n\n\npip\n\n\npip install https://github.com/mpg-age-bioinformatics/AGEpy/archive/0.6.0.tar.gz --user\n\n\n\n\ngithub\n\n\nGet the latest release from github:\n\n\ngit clone https://github.com/mpg-age-bioinformatics/AGEpy\n\n\n\n\nInstall:\n\n\ncd AGEpy\npython setup.py install --user\n\n\n\n\nand then update to the latest release whenever required with:\n\n\ncd AGEpy\ngit pull\npython setup.py install --user --force\n\n\n\n\n\nAlternatively you can also install the package with a symlink, so that changes\nto the source files will be immediately available to users of the package on\nyour system:\n\n\ncd AGEpy\npython setup.py develop --user\n\n\n\n\nBe aware that with the develop option you won't be able to properly update once new scripts are added.\n\n\nHelp\n\n\nIn bash:\n\n\npydoc AGEpy.AGEpy\n\n\n\n\nIn python:\n\n\nhelp(\nAGEpy.AGEpy\n)\n\n\n\n\nExample usage\n\n\nimport AGEpy as age\n\ngtf=age.readGTF(\n/path/to/file.gtf\n)\n\ngtf.head()", 
            "title": "Home"
        }, 
        {
            "location": "/#agepy", 
            "text": "This python package contains Bioinformatics tools developed at the\nBioinformatics Core Facility of the Max Planck Institute for Biology of Ageing.   Max Planck Institute for Biology of Ageing \nJoseph-Stelzmann-Str. 9b \nD-50931 Cologne \nGermany", 
            "title": "AGEpy"
        }, 
        {
            "location": "/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/#pip", 
            "text": "pip install https://github.com/mpg-age-bioinformatics/AGEpy/archive/0.6.0.tar.gz --user", 
            "title": "pip"
        }, 
        {
            "location": "/#github", 
            "text": "Get the latest release from github:  git clone https://github.com/mpg-age-bioinformatics/AGEpy  Install:  cd AGEpy\npython setup.py install --user  and then update to the latest release whenever required with:  cd AGEpy\ngit pull\npython setup.py install --user --force  Alternatively you can also install the package with a symlink, so that changes\nto the source files will be immediately available to users of the package on\nyour system:  cd AGEpy\npython setup.py develop --user  Be aware that with the develop option you won't be able to properly update once new scripts are added.", 
            "title": "github"
        }, 
        {
            "location": "/#help", 
            "text": "In bash:  pydoc AGEpy.AGEpy  In python:  help( AGEpy.AGEpy )", 
            "title": "Help"
        }, 
        {
            "location": "/#example-usage", 
            "text": "import AGEpy as age\n\ngtf=age.readGTF( /path/to/file.gtf )\n\ngtf.head()", 
            "title": "Example usage"
        }, 
        {
            "location": "/cookbook/", 
            "text": "", 
            "title": "Cookbook"
        }, 
        {
            "location": "/modules/bed/", 
            "text": "GetBEDnarrowPeakgz\n\n\nReads a gz compressed BED narrow peak file from a web address or local file and returns a pandas dataframe.\n\n\n\n\n\n\nURL_or_PATH_TO_file\n source of input bed. Either a web link or a path to a local file.\n\n\n\n\n\n\nreturns\n a pandas dataframe of the inpud bed.\n\n\n\n\n\n\n import AGEpy as age\n\n\n eCLIP_1_bednarrowPeak=\nhttps://www.encodeproject.org/files/ENCFF066PCT/@@download/ENCFF066PCT.bed.gz\n\n\n bed=age.GetBEDnarrowPeakgz(eCLIP_1_bednarrowPeak)\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n\n\n\n\nwriteBED\n\n\nWrites a bed dataframe into a bed file.\n\n\n\n\ninBED\n a pandas dataframe with the contents of the bed file to be written.\n\n\n\n\nfile_path\n path to target file.\n\n\n\n\n\n\nreturns\n nothing.\n\n\n\n\n\n\n import AGEpy as age\n\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n age.writeBED(bed,\n/path/to/file.bed\n)\n\n\n\n\n\n\ndfTObedtool\n\n\nTransforms a pandas dataframe into a bedtool. Requires \nbedtools\n to be in your \npath\n.\n\n\n\n\ndf\n a pandas dataframe.\n\n\nreturns\n a bedtool.\n\n\n\n\n import AGEpy as age\n\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n bedtool=age.dfTObedtool(bed)\n\n print bedtool.head()\n\nchr7    139371278   139371296   Peak_0  1000    +   5.09062636514014    48.9834262537309    -1  -1\nchr7    139371257   139371278   Peak_1  1000    +   5.0840236303159 48.7463712698062    -1  -1\nchr7    155781335   155781431   Peak_2  1000    +   3.70481328524336    42.6519289009201    -1  -1\nchr7    87156569    87156676    Peak_3  1000    +   3.95023151551588    37.7848384917051    -1  -1\nchr7    105073472   105073521   Peak_4  1000    +   4.14556204062503    34.0756845242392    -1  -1\nchr7    128761857   128761952   Peak_5  1000    +   4.02131461357736    33.9350181783027    -1  -1\nchr7    121296414   121296454   Peak_6  1000    +   3.50632247892067    30.2512926812531    -1  -1\nchr7    139368342   139368352   Peak_7  1000    +   4.41912711395099    29.6666535015756    -1  -1\nchr7    87155583    87155635    Peak_8  1000    +   4.08769554637519    29.3752024210392    -1  -1\nchr7    105540000   105540028   Peak_9  1000    +   4.2212263105571 29.0451450847765    -1  -1\n\n\n print type(bed)\n\n\nclass 'pandas.core.frame.DataFrame'\n\n\n\n print type(bedtool)\n\n\nclass 'pybedtools.bedtool.BedTool'\n\n\n\n\n\n\n\nGetPeaksExons\n\n\nAnnotates a bedtool, BED narrow peak.\n\n\n\n\nbed\n a pandas dataframe in bed format\n\n\n\n\nparsedGTF\n a parsed GTF file as outputed by parseGTF()\n\n\n\n\n\n\nreturns\n a Pandas dataframe\n\n\n\n\n\n\n import AGEpy as age\n\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n GTF=age.readGTF(\n/beegfs/group_bit/data/projects/departments/Bioinformatics/bit_RNAseq_eCLIP/downloads/gencode.v24.primary_assembly.annotation.gtf\n)\n\n print GTF.head()\n\nseqname  source     feature  start    end score strand frame  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .   \n2    chr1  HAVANA        exon  11869  12227     .      +     .   \n3    chr1  HAVANA        exon  12613  12721     .      +     .   \n4    chr1  HAVANA        exon  13221  14409     .      +     .   \n\n                                         attribute  \n0  gene_id \nENSG00000223972.5\n; gene_type \ntransc...\n  \n1  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n2  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n3  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n4  gene_id \nENSG00000223972.5\n; transcript_id \nEN...\n  \n\n\n GTFpa=age.parseGTF(GTF)\n\n print GTFpa.head()\n\nseqname  source     feature  start    end score strand frame gene_status  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .       KNOWN   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .       KNOWN   \n2    chr1  HAVANA        exon  11869  12227     .      +     .       KNOWN   \n3    chr1  HAVANA        exon  12613  12721     .      +     .       KNOWN   \n4    chr1  HAVANA        exon  13221  14409     .      +     .       KNOWN   \n\n            havana_gene    ...               exon_id      transcript_id  \\\n0  OTTHUMG00000000961.2    ...                   NaN                NaN   \n1  OTTHUMG00000000961.2    ...                   NaN  ENST00000456328.2   \n2  OTTHUMG00000000961.2    ...     ENSE00002234944.1  ENST00000456328.2   \n3  OTTHUMG00000000961.2    ...     ENSE00003582793.1  ENST00000456328.2   \n4  OTTHUMG00000000961.2    ...     ENSE00002312635.1  ENST00000456328.2   \n\n  exon_number  ont     havana_transcript ccdsid transcript_name  \\\n0         NaN  NaN                   NaN    NaN             NaN   \n1         NaN  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n2           1  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n3           2  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n4           3  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n\n                            gene_type transcript_status gene_name  \n0  transcribed_unprocessed_pseudogene               NaN   DDX11L1  \n1  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n2  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n3  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n4  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1\n\n\n bedAn=age.GetPeaksExons(bed,GTFpa)\n\n print bedAn.head()", 
            "title": "bed"
        }, 
        {
            "location": "/modules/bed/#getbednarrowpeakgz", 
            "text": "Reads a gz compressed BED narrow peak file from a web address or local file and returns a pandas dataframe.    URL_or_PATH_TO_file  source of input bed. Either a web link or a path to a local file.    returns  a pandas dataframe of the inpud bed.     import AGEpy as age  eCLIP_1_bednarrowPeak= https://www.encodeproject.org/files/ENCFF066PCT/@@download/ENCFF066PCT.bed.gz   bed=age.GetBEDnarrowPeakgz(eCLIP_1_bednarrowPeak)  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1", 
            "title": "GetBEDnarrowPeakgz"
        }, 
        {
            "location": "/modules/bed/#writebed", 
            "text": "Writes a bed dataframe into a bed file.   inBED  a pandas dataframe with the contents of the bed file to be written.   file_path  path to target file.    returns  nothing.     import AGEpy as age  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1  age.writeBED(bed, /path/to/file.bed )", 
            "title": "writeBED"
        }, 
        {
            "location": "/modules/bed/#dftobedtool", 
            "text": "Transforms a pandas dataframe into a bedtool. Requires  bedtools  to be in your  path .   df  a pandas dataframe.  returns  a bedtool.    import AGEpy as age  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1  bedtool=age.dfTObedtool(bed)  print bedtool.head()\n\nchr7    139371278   139371296   Peak_0  1000    +   5.09062636514014    48.9834262537309    -1  -1\nchr7    139371257   139371278   Peak_1  1000    +   5.0840236303159 48.7463712698062    -1  -1\nchr7    155781335   155781431   Peak_2  1000    +   3.70481328524336    42.6519289009201    -1  -1\nchr7    87156569    87156676    Peak_3  1000    +   3.95023151551588    37.7848384917051    -1  -1\nchr7    105073472   105073521   Peak_4  1000    +   4.14556204062503    34.0756845242392    -1  -1\nchr7    128761857   128761952   Peak_5  1000    +   4.02131461357736    33.9350181783027    -1  -1\nchr7    121296414   121296454   Peak_6  1000    +   3.50632247892067    30.2512926812531    -1  -1\nchr7    139368342   139368352   Peak_7  1000    +   4.41912711395099    29.6666535015756    -1  -1\nchr7    87155583    87155635    Peak_8  1000    +   4.08769554637519    29.3752024210392    -1  -1\nchr7    105540000   105540028   Peak_9  1000    +   4.2212263105571 29.0451450847765    -1  -1  print type(bed) class 'pandas.core.frame.DataFrame'   print type(bedtool) class 'pybedtools.bedtool.BedTool'", 
            "title": "dfTObedtool"
        }, 
        {
            "location": "/modules/bed/#getpeaksexons", 
            "text": "Annotates a bedtool, BED narrow peak.   bed  a pandas dataframe in bed format   parsedGTF  a parsed GTF file as outputed by parseGTF()    returns  a Pandas dataframe     import AGEpy as age  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1  GTF=age.readGTF( /beegfs/group_bit/data/projects/departments/Bioinformatics/bit_RNAseq_eCLIP/downloads/gencode.v24.primary_assembly.annotation.gtf )  print GTF.head()\n\nseqname  source     feature  start    end score strand frame  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .   \n2    chr1  HAVANA        exon  11869  12227     .      +     .   \n3    chr1  HAVANA        exon  12613  12721     .      +     .   \n4    chr1  HAVANA        exon  13221  14409     .      +     .   \n\n                                         attribute  \n0  gene_id  ENSG00000223972.5 ; gene_type  transc...   \n1  gene_id  ENSG00000223972.5 ; transcript_id  EN...   \n2  gene_id  ENSG00000223972.5 ; transcript_id  EN...   \n3  gene_id  ENSG00000223972.5 ; transcript_id  EN...   \n4  gene_id  ENSG00000223972.5 ; transcript_id  EN...     GTFpa=age.parseGTF(GTF)  print GTFpa.head()\n\nseqname  source     feature  start    end score strand frame gene_status  \\\n0    chr1  HAVANA        gene  11869  14409     .      +     .       KNOWN   \n1    chr1  HAVANA  transcript  11869  14409     .      +     .       KNOWN   \n2    chr1  HAVANA        exon  11869  12227     .      +     .       KNOWN   \n3    chr1  HAVANA        exon  12613  12721     .      +     .       KNOWN   \n4    chr1  HAVANA        exon  13221  14409     .      +     .       KNOWN   \n\n            havana_gene    ...               exon_id      transcript_id  \\\n0  OTTHUMG00000000961.2    ...                   NaN                NaN   \n1  OTTHUMG00000000961.2    ...                   NaN  ENST00000456328.2   \n2  OTTHUMG00000000961.2    ...     ENSE00002234944.1  ENST00000456328.2   \n3  OTTHUMG00000000961.2    ...     ENSE00003582793.1  ENST00000456328.2   \n4  OTTHUMG00000000961.2    ...     ENSE00002312635.1  ENST00000456328.2   \n\n  exon_number  ont     havana_transcript ccdsid transcript_name  \\\n0         NaN  NaN                   NaN    NaN             NaN   \n1         NaN  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n2           1  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n3           2  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n4           3  NaN  OTTHUMT00000362751.1    NaN     DDX11L1-002   \n\n                            gene_type transcript_status gene_name  \n0  transcribed_unprocessed_pseudogene               NaN   DDX11L1  \n1  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n2  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n3  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  \n4  transcribed_unprocessed_pseudogene             KNOWN   DDX11L1  bedAn=age.GetPeaksExons(bed,GTFpa)  print bedAn.head()", 
            "title": "GetPeaksExons"
        }, 
        {
            "location": "/modules/biom/", 
            "text": "datasetsBM\n\n\nLists BioMart datasets.\n\n\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n nothing\n\n\n\n\n\n\n import AGEpy as age\n\n datasetsBM()\n\n\n\n\n\n\ndatasetsBM\n\n\nLists BioMart filters for a specific dataset.\n\n\n\n\ndataset\n dataset to list filters of\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n nothing\n\n\n\n\n\n\n import AGEpy as age\n\n filtersBM()\n\n\n\n\n\n\n\nattributesBM\n\n\nLists BioMart attributes for a specific dataset.\n\n\n\n\ndataset\n dataset to list attributes of\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n nothing\n\n\n\n\n\n\n import AGEpy as age\n\n attributesBM()\n\n\n\n\n\n\n\nqueryBM\n\n\nQueries BioMart.\n\n\n\n\nquery_filter\n one BioMart filter associated with the items being queried\n\n\nquery_items\n list of items to be queried (must assoiate with given filter)\n\n\nquery_querydic\n for complex queries this option should be used instead of 'filters' and 'items' and a dictionary of filters provided here eg. querydic={\"filter1\":[\"item1\",\"item2\"],\"filter2\":[\"item3\",\"item4\"]}. If using querydic, don't query more than 350 items at once.\n\n\nquery_attributes\n list of attributes to recover from BioMart\n\n\nquery_dataset\n dataset to query\n\n\n\n\nhost\n address of the host server, default='http://www.ensembl.org/biomart'\n\n\n\n\n\n\nreturns\n a Pandas dataframe of the queried attributes\n\n\n\n\n\n\n import AGEpy as age\n\n queryDf=queryBM()\n\n\n\n\n\n\n\n\nFilterGOstring\n\n\nFilters GO terms based on given strings using ENSEMBL's biomart homology mapping.\n\n\n\n\nnames_filter\n list of substrings to filter GO names on. Default=[\"age-\", \"aging\", \"aged\", 'aging', 'aging.', 'aging,']\n\n\nexclude_names\n list of substrings to be used for exclusion of GO names. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                       \"stage-1\",\"cage-like\",\"message-specific\",\n                       \"damage-associated\",\"stage-specific\",\"foraging\",\n                       \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]\n\n\ndefs_filter\n list of substrings to filter GO defenitions on. Default=[\" age-\", \" aging\", \" aged\", ' aging', ' aging.', ' aging,']\n\n\nexclude_defs\n list of substrings to be used for exclustion of GO defenitions. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                         \"stage-1\",\"cage-like\",\"message-specific\",\n                         \"damage-associated\",\"stage-specific\",\"foraging\",\n                         \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]\n\n\nhost\n biomart host server, default=\"http://www.ensembl.org/biomart\"\n\n\nHSA\n retrieved hsa dataframe\n\n\nMUS\n retrieved mus dataframe\n\n\nCEL\n retrieved cel dataframe\n\n\n\n\nDMEL\n retrieved dmel dataframe\n\n\n\n\n\n\nreturns\n  homology_df, HSA, MUS, CEL, DMEL\n\n\n\n\n\n\n import AGEpy as age\n\n homology_df=FilterGOstring()", 
            "title": "biom"
        }, 
        {
            "location": "/modules/biom/#datasetsbm", 
            "text": "Lists BioMart datasets.    host  address of the host server, default='http://www.ensembl.org/biomart'    returns  nothing     import AGEpy as age  datasetsBM()", 
            "title": "datasetsBM"
        }, 
        {
            "location": "/modules/biom/#datasetsbm_1", 
            "text": "Lists BioMart filters for a specific dataset.   dataset  dataset to list filters of   host  address of the host server, default='http://www.ensembl.org/biomart'    returns  nothing     import AGEpy as age  filtersBM()", 
            "title": "datasetsBM"
        }, 
        {
            "location": "/modules/biom/#attributesbm", 
            "text": "Lists BioMart attributes for a specific dataset.   dataset  dataset to list attributes of   host  address of the host server, default='http://www.ensembl.org/biomart'    returns  nothing     import AGEpy as age  attributesBM()", 
            "title": "attributesBM"
        }, 
        {
            "location": "/modules/biom/#querybm", 
            "text": "Queries BioMart.   query_filter  one BioMart filter associated with the items being queried  query_items  list of items to be queried (must assoiate with given filter)  query_querydic  for complex queries this option should be used instead of 'filters' and 'items' and a dictionary of filters provided here eg. querydic={\"filter1\":[\"item1\",\"item2\"],\"filter2\":[\"item3\",\"item4\"]}. If using querydic, don't query more than 350 items at once.  query_attributes  list of attributes to recover from BioMart  query_dataset  dataset to query   host  address of the host server, default='http://www.ensembl.org/biomart'    returns  a Pandas dataframe of the queried attributes     import AGEpy as age  queryDf=queryBM()", 
            "title": "queryBM"
        }, 
        {
            "location": "/modules/biom/#filtergostring", 
            "text": "Filters GO terms based on given strings using ENSEMBL's biomart homology mapping.   names_filter  list of substrings to filter GO names on. Default=[\"age-\", \"aging\", \"aged\", 'aging', 'aging.', 'aging,']  exclude_names  list of substrings to be used for exclusion of GO names. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                       \"stage-1\",\"cage-like\",\"message-specific\",\n                       \"damage-associated\",\"stage-specific\",\"foraging\",\n                       \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]  defs_filter  list of substrings to filter GO defenitions on. Default=[\" age-\", \" aging\", \" aged\", ' aging', ' aging.', ' aging,']  exclude_defs  list of substrings to be used for exclustion of GO defenitions. Default=[\"packaging\",\"voltage\",\"cleavage-\",\n                         \"stage-1\",\"cage-like\",\"message-specific\",\n                         \"damage-associated\",\"stage-specific\",\"foraging\",\n                         \"DNA-damaging\",\"engaging\",\"damaged\",\"packaged\"]  host  biomart host server, default=\"http://www.ensembl.org/biomart\"  HSA  retrieved hsa dataframe  MUS  retrieved mus dataframe  CEL  retrieved cel dataframe   DMEL  retrieved dmel dataframe    returns   homology_df, HSA, MUS, CEL, DMEL     import AGEpy as age  homology_df=FilterGOstring()", 
            "title": "FilterGOstring"
        }, 
        {
            "location": "/modules/cytoscape/", 
            "text": "", 
            "title": "cytoscape"
        }, 
        {
            "location": "/modules/david/", 
            "text": "", 
            "title": "david"
        }, 
        {
            "location": "/modules/fasta/", 
            "text": "", 
            "title": "fasta"
        }, 
        {
            "location": "/modules/go/", 
            "text": "", 
            "title": "go"
        }, 
        {
            "location": "/modules/gtf/", 
            "text": "", 
            "title": "gtf"
        }, 
        {
            "location": "/modules/homology/", 
            "text": "", 
            "title": "homology"
        }, 
        {
            "location": "/modules/kegg/", 
            "text": "", 
            "title": "kegg"
        }, 
        {
            "location": "/modules/meme/", 
            "text": "", 
            "title": "meme"
        }, 
        {
            "location": "/modules/plots/", 
            "text": "", 
            "title": "plots"
        }, 
        {
            "location": "/modules/sam/", 
            "text": "", 
            "title": "sam"
        }, 
        {
            "location": "/executables/adiff/", 
            "text": "", 
            "title": "aDiff"
        }
    ]
}