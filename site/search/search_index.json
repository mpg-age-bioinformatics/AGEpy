{
    "docs": [
        {
            "location": "/", 
            "text": "AGEpy \n \n\n\nThis python package contains Bioinformatics tools developed at the\nBioinformatics Core Facility of the Max Planck Institute for Biology of Ageing.\n\n\n\n\nMax Planck Institute for Biology of Ageing\n\nJoseph-Stelzmann-Str. 9b\n\nD-50931 Cologne\n\nGermany\n\n\n\n\nInstallation\n\n\npip\n\n\npip install https://github.com/mpg-age-bioinformatics/AGEpy/archive/0.6.0.tar.gz --user\n\n\n\n\ngithub\n\n\nGet the latest release from github:\n\n\ngit clone https://github.com/mpg-age-bioinformatics/AGEpy\n\n\n\n\nInstall:\n\n\ncd AGEpy\npython setup.py install --user\n\n\n\n\nand then update to the latest release whenever required with:\n\n\ncd AGEpy\ngit pull\npython setup.py install --user --force\n\n\n\n\n\nAlternatively you can also install the package with a symlink, so that changes\nto the source files will be immediately available to users of the package on\nyour system:\n\n\ncd AGEpy\npython setup.py develop --user\n\n\n\n\nBe aware that with the develop option you won't be able to properly update once new scripts are added.\n\n\nHelp\n\n\nIn bash:\n\n\npydoc AGEpy.AGEpy\n\n\n\n\nIn python:\n\n\nhelp(\nAGEpy.AGEpy\n)\n\n\n\n\nExample usage\n\n\nimport AGEpy as age\n\ngtf=age.readGTF(\n/path/to/file.gtf\n)\n\ngtf.head()", 
            "title": "Home"
        }, 
        {
            "location": "/#agepy", 
            "text": "This python package contains Bioinformatics tools developed at the\nBioinformatics Core Facility of the Max Planck Institute for Biology of Ageing.   Max Planck Institute for Biology of Ageing \nJoseph-Stelzmann-Str. 9b \nD-50931 Cologne \nGermany", 
            "title": "AGEpy"
        }, 
        {
            "location": "/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/#pip", 
            "text": "pip install https://github.com/mpg-age-bioinformatics/AGEpy/archive/0.6.0.tar.gz --user", 
            "title": "pip"
        }, 
        {
            "location": "/#github", 
            "text": "Get the latest release from github:  git clone https://github.com/mpg-age-bioinformatics/AGEpy  Install:  cd AGEpy\npython setup.py install --user  and then update to the latest release whenever required with:  cd AGEpy\ngit pull\npython setup.py install --user --force  Alternatively you can also install the package with a symlink, so that changes\nto the source files will be immediately available to users of the package on\nyour system:  cd AGEpy\npython setup.py develop --user  Be aware that with the develop option you won't be able to properly update once new scripts are added.", 
            "title": "github"
        }, 
        {
            "location": "/#help", 
            "text": "In bash:  pydoc AGEpy.AGEpy  In python:  help( AGEpy.AGEpy )", 
            "title": "Help"
        }, 
        {
            "location": "/#example-usage", 
            "text": "import AGEpy as age\n\ngtf=age.readGTF( /path/to/file.gtf )\n\ngtf.head()", 
            "title": "Example usage"
        }, 
        {
            "location": "/cookbook/", 
            "text": "", 
            "title": "Cookbook"
        }, 
        {
            "location": "/modules/bed/", 
            "text": "GetBEDnarrowPeakgz\n\n\nReads a gz compressed BED narrow peak file from a web address or local file and returns a pandas dataframe.\n\n\nURL_or_PATH_TO_file:\n Source of input bed. Either a web link or a path to a local file.\n\n\n import AGEpy as age\n\n\n eCLIP_1_bednarrowPeak=\nhttps://www.encodeproject.org/files/ENCFF066PCT/@@download/ENCFF066PCT.bed.gz\n\n\n bed=age.GetBEDnarrowPeakgz(eCLIP_1_bednarrowPeak)\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n\n\n\n\nwriteBED\n\n\nWrites a bed dataframe into a bed file.\n\n\ninBED:\n A pandas dataframe with the contents of the bed file to be written.\n\n\nfile_path:\n Path to target file.\n\n\n import AGEpy as age\n\n\n print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1\n\n\n age.writeBED(bed,\n/path/to/file.bed\n)", 
            "title": "bed"
        }, 
        {
            "location": "/modules/bed/#getbednarrowpeakgz", 
            "text": "Reads a gz compressed BED narrow peak file from a web address or local file and returns a pandas dataframe.  URL_or_PATH_TO_file:  Source of input bed. Either a web link or a path to a local file.   import AGEpy as age  eCLIP_1_bednarrowPeak= https://www.encodeproject.org/files/ENCFF066PCT/@@download/ENCFF066PCT.bed.gz   bed=age.GetBEDnarrowPeakgz(eCLIP_1_bednarrowPeak)  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1", 
            "title": "GetBEDnarrowPeakgz"
        }, 
        {
            "location": "/modules/bed/#writebed", 
            "text": "Writes a bed dataframe into a bed file.  inBED:  A pandas dataframe with the contents of the bed file to be written.  file_path:  Path to target file.   import AGEpy as age  print bed.head()\n\nchrom chromStart   chromEnd    name score strand       signalValue  \\\n0  chr7  139371278  139371296  Peak_0  1000      +  5.09062636514014   \n1  chr7  139371257  139371278  Peak_1  1000      +   5.0840236303159   \n2  chr7  155781335  155781431  Peak_2  1000      +  3.70481328524336   \n3  chr7   87156569   87156676  Peak_3  1000      +  3.95023151551588   \n4  chr7  105073472  105073521  Peak_4  1000      +  4.14556204062503   \n\n     -log10(pValue) -log10(qvalue) peak  \n0  48.9834262537309             -1   -1  \n1  48.7463712698062             -1   -1  \n2  42.6519289009201             -1   -1  \n3  37.7848384917051             -1   -1  \n4  34.0756845242392             -1   -1  age.writeBED(bed, /path/to/file.bed )", 
            "title": "writeBED"
        }, 
        {
            "location": "/modules/biom/", 
            "text": "", 
            "title": "biom"
        }, 
        {
            "location": "/modules/cytoscape/", 
            "text": "", 
            "title": "cytoscape"
        }, 
        {
            "location": "/modules/david/", 
            "text": "", 
            "title": "david"
        }, 
        {
            "location": "/modules/fasta/", 
            "text": "", 
            "title": "fasta"
        }, 
        {
            "location": "/modules/go/", 
            "text": "", 
            "title": "go"
        }, 
        {
            "location": "/modules/gtf/", 
            "text": "", 
            "title": "gtf"
        }, 
        {
            "location": "/modules/homology/", 
            "text": "", 
            "title": "homology"
        }, 
        {
            "location": "/modules/kegg/", 
            "text": "", 
            "title": "kegg"
        }, 
        {
            "location": "/modules/meme/", 
            "text": "", 
            "title": "meme"
        }, 
        {
            "location": "/modules/plots/", 
            "text": "", 
            "title": "plots"
        }, 
        {
            "location": "/modules/sam/", 
            "text": "", 
            "title": "sam"
        }, 
        {
            "location": "/executables/adiff/", 
            "text": "", 
            "title": "aDiff"
        }
    ]
}